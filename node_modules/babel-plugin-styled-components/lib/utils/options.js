'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useNoTags = exports.useTranspileTemplateLiterals = exports.useMinify = exports.useFileName = exports.useSSR = exports.useDisplayName = undefined;

var _semver = require('semver');

var _semver2 = _interopRequireDefault(_semver);

var _package = require('styled-components/package.json');

var _package2 = _interopRequireDefault(_package);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getOption(_ref, name) {
  var opts = _ref.opts;
  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;

  return opts[name] === undefined || opts[name] === null ? defaultValue : opts[name];
}

var useDisplayName = exports.useDisplayName = function useDisplayName(state) {
  return getOption(state, 'displayName');
};
var useSSR = exports.useSSR = function useSSR(state) {
  return getOption(state, 'ssr', true);
};
var useFileName = exports.useFileName = function useFileName(state) {
  return getOption(state, 'fileName');
};
var useMinify = exports.useMinify = function useMinify(state) {
  return getOption(state, 'minify');
};
var useTranspileTemplateLiterals = exports.useTranspileTemplateLiterals = function useTranspileTemplateLiterals(state) {
  return getOption(state, 'transpileTemplateLiterals');
};

/**
 * When using the babel plugin, we desugar styled.div to styled('div'), which means we can
 * then use a lighter-weight version of s-c (v4+) since those element names don't need to be kept around
 * ahead of time.
 */
var useNoTags = exports.useNoTags = function useNoTags() {
  return _semver2.default.satisfies(_package2.default.version, '>= 4');
};