'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _get = require('lodash/get');

var _get2 = _interopRequireDefault(_get);

var _detectors = require('../utils/detectors');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (t) {
  return function (path, state) {
    /**
     * Handles both "styled.div" and "styled_default.default.div" (transpiled output)
     */
    if ((0, _detectors.isStyled)(t)(path.node, state)) {
      /**
       * e.g. "div"
       */
      var sugar = (0, _get2.default)(path, 'node.property.name');

      /**
       * If the left side of the function is a complex path, e.g.
       * "styled_default.default.div", we want to preserve the "styled_default.default"
       * part and just reuse that AST object.
       */
      var leftSide = t.isMemberExpression(path.node.object) ? path.node.object : t.identifier(path.node.object.name);

      if (sugar) {
        /**
         * "styled.div" -> "styled('div')"
         */
        path.replaceWith(t.callExpression(leftSide, [t.stringLiteral(sugar)]));
      }
    }
  };
};