"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }

// The capture group makes sure that the split contains the interpolation index
var placeholderRegex = exports.placeholderRegex = /(?:__PLACEHOLDER_(\d+)__)/g;

// Alternative regex that splits without a capture group
var placeholderNonCapturingRegex = /__PLACEHOLDER_(?:\d+)__/g;

// Generates a placeholder from an index
var makePlaceholder = exports.makePlaceholder = function makePlaceholder(index) {
  return `__PLACEHOLDER_${index}__`;
};

// Splits CSS by placeholders
var splitByPlaceholders = exports.splitByPlaceholders = function splitByPlaceholders(_ref) {
  var _ref2 = _toArray(_ref),
      css = _ref2[0],
      rest = _ref2.slice(1);

  var capture = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  return [css.split(capture ? placeholderRegex : placeholderNonCapturingRegex)].concat(_toConsumableArray(rest));
};